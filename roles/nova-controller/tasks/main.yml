---

- name: configure firewall
  shell: lokkit --port {{ item }}:tcp
  with_items:
  - 8774
  - 8775
  tags:
  - configure


- name: install services
  yum: name={{ item }} state=present
  with_items:
  - openstack-nova-api
  - openstack-nova-cert 
  - openstack-nova-conductor
  - openstack-nova-console
  - openstack-nova-novncproxy
  - openstack-nova-scheduler
  - python-novaclient

- name: stop nova services
  service: name=openstack-{{ item }} state=stopped
  with_items:
  - nova-api
  - nova-scheduler
  - nova-conductor
  # it's a nova-compute package
  # - nova-compute
  - nova-cert
  - nova-console
  - nova-consoleauth
  - nova-novncproxy
  when: nova_force_init == True
  tags:
  - service_stop

- name: configure nova
  template: src=nova.conf.j2 dest=/etc/nova/nova.conf backup=yes
  tags:
  - configure


- name: drop nova DB
  mysql_db: name={{ mysql_nova_db }} state=absent login_user={{ mysql_login_user }}  login_password={{ mysql_login_password }}
  when: nova_force_init == True
  tags:
  - initialize

  
- name: create nova DB
  mysql_db: name={{ mysql_nova_db }} state=present login_user={{ mysql_login_user }}  login_password={{ mysql_login_password }}
  tags:
  - initialize


- name: create nova user
  mysql_user: name={{ mysql_nova_user }} state=present host='{{ item }}' password="{{ mysql_nova_password }}" priv={{ mysql_nova_db }}.*:ALL login_user=root login_password=''
  with_items: groups['nova']
  tags:
  - initialize


- name: initialize DB
  shell: nova-manage db sync
  when: nova_force_init == True
  tags:
  - initialize

  
- name: start and enable nova services
  service: name=openstack-{{ item }} state=started enabled=yes
  with_items:
  - nova-api
  - nova-scheduler
  - nova-conductor
  # it's a nova-compute package
  # - nova-compute
  - nova-cert
  - nova-console
  - nova-consoleauth
  - nova-novncproxy
  tags:
  - service_start

