---


- name: configure firewall
  shell: lokkit --port {{ item }}:tcp
  with_items:
  - 9697
  tags:
  - configure


- name: modify sysctl
  sysctl: name={{ item.name }} value={{ item.value }} state=present
  with_items:
  - { 'name':'net.ipv4.ip_forward', 'value':'1' }
  - { 'name':'net.ipv4.conf.all.rp_filter', 'value':'0' }
  - { 'name':'net.ipv4.conf.default.rp_filter', 'value':'0' }
  tags:
  - configure


- name: install neutron and dependencies
  yum: name={{ item }} state=present
  with_items:
  - openstack-neutron
  - openstack-neutron-openvswitch
  - openstack-neutron-ml2
  # discovered this one while tinkering...
  - conntrack-tools
  tags:
  - install



- name: configure Neutron & OpenVSwitch plugin
  template: src={{ item.src }} dest={{ item.dest }} backup=yes
  with_items:
  - { 'src': 'roles/neutron-controller/templates/neutron.conf.j2', 'dest':'/etc/neutron/neutron.conf' }
  - { 'src': 'l3_agent.ini.j2', 'dest':'/etc/neutron/l3_agent.ini' }
  - { 'src': 'metadata_agent.ini.j2', 'dest':'/etc/neutron/metadata_agent.ini' }
  - { 'src': 'dhcp_agent.ini.j2', 'dest':'/etc/neutron/dhcp_agent.ini' }
  - { 'src': 'roles/neutron-controller/templates/ml2_conf.ini.j2', 'dest': '/etc/neutron/plugins/ml2/ml2_conf.ini' }
  # - { 'src': 'roles/neutron-controller/templates/ovs_neutron_plugin.ini.j2', 'dest': '/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini' }
  tags:
  - configure

- name: make sure plugin.ini is there
  file: src=/etc/neutron/plugins/ml2/ml2_conf.ini dest=/etc/neutron/plugin.ini state=link force=yes
  tags:
  - configure

- name: make sure ovs_neutron_plugin.ini is pointing to plugin.init
  file: dest=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini src=/etc/neutron/plugin.ini state=link force=yes
  tags:
  - configure


- name: stop services
  service: name={{ item }} state=stopped enabled=yes
  with_items:
  - neutron-openvswitch-agent
  - neutron-l3-agent
  - neutron-dhcp-agent
  - neutron-metadata-agent
  when: neutron_force_init == True
  tags:
  - service_stop

- name: start OpenVSwitch
  service: name=openvswitch state=started enabled=yes
  tags:
  - service_start

- name: create integration bridge
  openvswitch_bridge: bridge=br-int state=present
  tags:
  - initialize

# referenced in /etc/neutron/l3_agent.ini
- name: create external bridge
  openvswitch_bridge: bridge=br-ex state=present
  tags:
  - initialize

- name: disable GRO & friends on external interface
  # shell: ethtool -K {{ neutron_nic_name }} tso off lro off gro off gso off
  shell: ethtool -K {{ neutron_nic_name }} gro off

- name: permanently disable GRO & friends (physical)
  lineinfile: dest=/etc/sysconfig/network-scripts/ifcfg-{{ neutron_nic_name }} 
              line='ETHTOOL_OPTS="-K {{neutron_nic_name}} tso off lro off gro off gso off"'
              backup=yes
              state=present
  when: virtual_deploy != True

- name: permanently disable GRO & friends (virtual)
  lineinfile: dest=/etc/sysconfig/network-scripts/ifcfg-{{ neutron_nic_name }} 
              line='ETHTOOL_OPTS="-K {{neutron_nic_name}} gro off"'
              backup=yes
              state=present
  when: virtual_deploy == True

##FIXME
## this kills all network traffic to the box.... hmmm..
## https://answers.launchpad.net/neutron/+question/217373
## port's IP needs to be moved over to the bridge...
## Sample OVS bridge config:
##    http://kashyapc.fedorapeople.org/virt/openvswitch-and-libvirt-kvm.txt
##FIXME - name: add OVS port
  ##FIXME openvswitch_port: bridge=br-ex port={{ neutron_nic_name }} state=present


- name: copy bridge config
  template: src=ifcfg-br.j2 dest=/etc/sysconfig/network-scripts/ifcfg-{{ neutron_bridge_name }} backup=yes

- name: copy interface config
  template: src=ifcfg-nic.j2 dest=/etc/sysconfig/network-scripts/ifcfg-{{ neutron_nic_name }} backup=yes

## Crude fix for disapearing network
## this really needs to be async.... but "script" doesn't support async...
- name: add OVS port
  script: add_ovs_port.sh {{ neutron_bridge_name }} {{ neutron_nic_name }}
  # async: 60
  # poll: 30
  ignore_errors: True

- name: wait for the network restart
  local_action: wait_for host={{ inventory_hostname }} port=22 delay=5 timeout=120

- name: startup services
  service: name={{ item }} state=started enabled=yes
  with_items:
  - neutron-openvswitch-agent
  - neutron-l3-agent
  - neutron-dhcp-agent
  - neutron-metadata-agent
  tags:
  - service_start

